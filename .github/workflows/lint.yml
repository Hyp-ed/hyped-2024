name: Linter

on: push

jobs:
  clang-tidy:
    runs-on: [ubuntu-latest]
    
    steps:
      - uses: actions/checkout@v2

      # Setup Docker Buildx
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run build
        run: ./docker.sh -r -c -b -l

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run clang-format style check
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: "16"
          style: "file"

  cmake-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run cmake-format style check
        uses: PuneetMatharu/cmake-format-lint-action@v1.0.4
        with:
          args: --check

  find-todos-fixme:
    name: Find todos and fixmes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run todo check
        run: |
          if grep -riE -n 'TODO|FIXME' * | grep -v -i 'TODOLater'; then
            exit 1
          else
            echo "All good"
          fi

  find-missing-std:
    name: "Find missing std::"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run check for missing std namespace prefix
        run: |
          IDENTIFIERS="uint8_t uint16_t uint32_t uint64_t int8_t int16_t int32_t int64_t size_t"
          for identifier in $IDENTIFIERS; do
            if grep -r -n "$identifier" | grep -v "std::" | grep -v "ssize_t" | grep -v "lint.yml"; then
              echo "[ERROR] found $identifier without std:: prefix"
              exit 1
            fi
          done

  find-redundant-hyped:
    name: "Find redundant hyped:: namespaces"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run check for extra hyped namespace prefix
        run: |
          if grep -riE -n "hyped::" | grep -v "namespace"; then
            echo "[ERROR] found redundant hyped:: prefix"
            exit 1
          fi
        working-directory: lib

  check-header-pragma-once:
    name: Check headers for \#pragma once
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run check for missing header pragma once
        run: |
          if grep -rL "#pragma once" --include \*.hpp | grep -v "lint.yml"; then
            echo "[ERROR] found header without #pragma once"
            exit 1
          fi

  check-no-crlf:
    name: Check no crlf line endings
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run check for CRLF line endings
        run: |
          if git ls-files --eol | grep crlf; then
            echo "[ERROR] found CRLF line endings, install dos2unix and run 'find . -type f -exec dos2unix {} \;' to fix"
            exit 1
          fi
